{
  "articles": [
    {
      "path": "HW1.html",
      "title": "HW1",
      "description": "Preparativos proyecto y exploración características de la arquitectura\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nObjetivos de aprendizaje (contenido)\r\nObjetivos de proceso (soft skills)\r\nEntrega\r\nActividades\r\n\r\n\r\n\r\nObjetivos de aprendizaje (contenido)\r\nDespués de completar esta actividad, los alumnos deberían poder:\r\nEvaluar las características de la arquitectura a partir de requisitos explícitos\r\nEvaluar las características de la arquitectura a partir de requisitos implícitos\r\nSintetizar las características más relevantes\r\nObjetivos de proceso (soft skills)\r\nDespués de completar esta actividad, los alumnos deberían poder:\r\nEstablecerse en grupos de trabajos y asignar responsabilidades\r\nEntrega\r\nSe entrega de forma individual la Actividad 2 en el Aula Virtual. Se deberá subir un documento en formato PDF de extensión máxima de 1 página.\r\nFecha límite: 22 sep, 23:59\r\nActividades\r\nLee con atención el proyecto común. Durante estos días iniciales, es muy importante resolver cualquier duda con el profesorado y realizar una planificación temporal del proyecto, evaluando las actividades requeridas en cada una de las entregas establecidas. Por supuesto, hay que establcerse en grupso de trabajo. Encuentra a tus compañeros/as!\r\nArquitectura kata: Sillicon Sandwiches\r\nDescripción: Una franquicia de tiendas de sándwiches nacional quiere habilitar los pedidos en línea (además de su actual servicio de llamada).\r\nUsuarios: Miles, quizás millones al día\r\nRequisitos\r\nLos usuarios realizarán su pedido, luego se les dará un tiempo para recoger su sándwich e instrucciones para llegar a la tienda (que debe integrarse con varios servicios de mapas externos que incluyen información de tráfico).\r\nOfrece promociones diarias nacionales.\r\nOfrece promociones diarias locales.\r\nAcepta pago en línea, en persona o a la entrega.\r\n\r\nContexto:\r\nLa empresa matriz tiene planes a corto plazo para expandirse al extranjero.\r\nEl objetivo corporativo es contratar mano de obra barata para maximizar las ganancias.\r\n\r\nPara cada una de las sentencias en usarios, requisitos, y contexto, justifica que características de la arquitectua son importantes. Recuerda, todo en arquitectura es compromiso. Para terminar, como arquitecto/a, indica las 3 características más relevantes para el sistema.\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:04:59+02:00"
    },
    {
      "path": "HW2.html",
      "title": "HW2",
      "description": "Refelxion personal de las sesions arquitectura de software\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nObjetivos de aprendizaje (contenido)\r\nObjetivos de proceso (soft skills)\r\nEntrega\r\nActividades\r\n\r\n\r\n\r\nObjetivos de aprendizaje (contenido)\r\nDespués de completar esta actividad, los alumnos deberían poder:\r\n\r\nObjetivos de proceso (soft skills)\r\nDespués de completar esta actividad, los alumnos deberían poder:\r\nSer consciente de los procesos de apredizaje que realizan (Metacognition)\r\nReflexionar sobre la calidad del trabajo realizado y dudas pendientes (Metacognition)\r\nEntrega\r\nSe entrega de forma individual en el Aula Virtual. Se deberá subir un documento en formato PDF.\r\nFecha límite: 29 sep, 23:59\r\nActividades\r\nTras terminar las dos sesiones de teoría relativas a la arquitectura de software, donde hemos visto algunos conceptos básicos de arquitectura, como las dimensiones de una arquitecture software (caracteristicas, y estructura/estilo), el rol de un arquitecto de software vs diseñador/desarrollador, así como las tareas que lleva a cabo un arquitectro, ahora nos detenemos un momento para valorar lo que hemos aprendido, las dudas que aún quedan, y para qué lo hemos aprendido. Todas las preguntas siguientes hacen referencia únicamente a las dos sesiones de teoría TE1 y TE2:\r\n¿Cuál crees que ha sido el objetivo(s) de aprendizaje de estas dos sesiones?\r\n¿Qué es lo que mejor has entendido de lo que has trabajo, aquello que crees que tienes bastante claro?\r\n¿Cualés son las cosas más importantes (para ti) que has aprendido en las dos sesiones de teoría?\r\n¿Que dudas te han quedado? ¿Qué es aquello que te sigue causando confusión y te gustaría aclarar?\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:05:00+02:00"
    },
    {
      "path": "index.html",
      "title": "EI1039 - Dise&ntilde;o de software",
      "description": "Ampliación de la Guía Docente EI1039 para el curso académico 2021/2022\n",
      "author": [
        {
          "name": "Carlos Granell",
          "url": "http://carlosgranell.eu"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\n\r\nContents\r\nContacto\r\nObjetivo y resultados de aprendizaje\r\nMétodo de instrucción\r\nMateriales y contenido\r\nMétodos de evaluación\r\nCódigo de Conducta\r\n\r\n\r\n\r\n\r\nContacto\r\nCarlos Granell  Associate Professor in Computer Science  Office UB1520DD, Espaitec2, 5th floor  Universitat Jaume I, Spain\r\nTutorías (virtuales) primer semestre:\r\nMartes de 10 a 12:00\r\nJueves de 15 a 16:00\r\nen otros horarios mediante cita previa (por email)\r\n\r\nPolítica de tutorías: Todos sabemos que las restricciones sanitarias todavía permanecen en vigor para el curso 2021/22, por lo que las tutorías serán preferiblemente telemáticas (via Meet), aunque estoy abierto a tutorías presenciales si es necesario.\r\n\r\nVer en SIA los horarios y localización de las clases teóricas (TE), seminarios (SE) y laboratorio (LA):\r\nTE/SE: TD1019AA.\r\nLA: TD0209AI.\r\nObjetivo y resultados de aprendizaje\r\nSegún el SIA “la asignatura Diseño de Software se imparte en el primer semestre de cuarto curso del grado en Ingeniería Informática de la Universitat Jaume I, como parte del itinerario de Ingeniería del Software. El objetivo de esta asignatura es proporcionar al alumnado conocimientos y habilidades sobre las distintas etapas del diseño del software dentro del proceso de desarrollo.”\r\nAl final de la EI1039, deberías ser capaz de:\r\nComparar las distintas estrategias que se pueden utilizar en el diseño de un sistema software.\r\nSeleccionar, aplicar y evaluar patrones de arquitectura y diseño adecuados a la resolución de un determinado problema de desarrollo del software.\r\nDiseñar y evaluar la interfaz de usuario utilizando principios y técnicas propias de la interacción persona-computador.\r\nTan importante como los resultados de aprendizaje listados arrbia son las competencias blandas (o soft skills) tales como la habilidad de comunicación, trabajo en equipo, capacidad de sintesis de información, capacidad de toma de decisiones y resolución de conflictos, gestión del tiempo o liderazgo. Trabajaremos estas competencias blandas a lo largo del curso pues, lo creas o no, son aspectos vitales en el día a día de un arquitecto/a de software.\r\nArquitectura software, patrones de diseño, comunicación, trabajo en equipo, …. Suena bien, ¿no? No menos importante, espero que te diviertas en el aprendizaje y comprensión del contenido de la asignatura para el diseño y desarrollo de aplicaciones avanzadas.\r\nMétodo de instrucción\r\n\r\nTenemos millones de neuronas. que “hacen amigos fácilmente.” Las neuronas se conectan con otras neuronas con cada nueva experiencia que tenemos (nuevas emociones, pensamientos, acciones. etc.) formando redes. Las redes al principio son débiles., pero cada vez que repetimos la experiencia o acción, la red se consolida y se hace más fuerte. Cuando aprendemos, nuestro cerebro cambia por la formación de nuevas conexiones entre neuronas.\r\nCuando reflexionamos y aplicamos cierto conocimento a contexto nuevos, lo comprendemos más profundamente, provocando que la red sea más densa y tenga conexiones con otras redes. La differencia entre la red de un principiante y la de un experto radica justamente en el número y densidad de conexiones. Cuanto más interconexiones, mayor comprensión.\r\n\r\n¿Te has preguntado alguna vez qué pasa en tu cerebro cuando aprendes? (Lang 2016)\r\nSi esperas presentaciones largas por mi parte todos los viernes por la tarde, entonces creo que te has matriculado de la asignatura equivocada. Hay evidencia científica de sobra que demuestra una y otra vez que los métodos de aprendizaje activo (por activo me refiero a todos, tanto dentro como fuera de clase) son mucho más efectivos que escucharme y tomar apuntes de forma pasiva. Vale, es cierto que a veces son necesarias presentaciones breves aclaratorias; pero tú debes ser el protagonista (y no yo) de tu propio proceso de aprendizaje para alcanzar los resultados esperados con éxito. Por lo tanto, esta asignatura mezcla diversas estrategias de aprendizaje, algunas más tradicionales como presentaciones tradicionales por mi parte cuando sea necesario combinadas con estrategias de apredizaje colaborativo y activo, como Process Oriented Guided Inquiry Learning (para trabajo en grupo, exploración y aplicación de conceptos, y competencias de proceso o process skills) y Flipped Classroom (lecturas y ejercicios básicos fuera del aula que requieren competencias cognitivas bajas, con análisis y resolución de problemas en aula que requiren competencias cognitivas altas.\r\nTaxonomía de BloomThe Guide Inquiry Learning CyclePara que te hagas una idea, una semana típica de clase de teoría podría ser así:\r\nHasta el miércoles, a las 23:59: Fecha límite para entregar las actividades no presenciales propuestas de la semana anterior en el Aula Virtual.\r\nHasta el viernes, antes de clase: Revisar lecturas asignadas y videos propuestos.\r\nViernes (en aula): puesta en común sobre el trabajo no presencial entregado previamente, mini-presentaciones, actividad POGIL, etc. Propuesta de trabajo no presenciales para la próxima semana, normalmente como continuación de la actividad POGIL desarrollada en el aula.\r\nLa asignatura también consta de clases de seminarios (SE) donde explorarás temas adicionales al diseño de patrones, como arquitectura de software e interfaces de usuario, y podrás practicar tus competencias blandas. Más detalles a lo largo del curso.\r\nLas asignaturas EI1039 (Diseño de software) y EI1048 (Paradigmas de Software) están muy relacionadas, ya que son dos caras de la misma moneda a la hora de diseñar y desarrollar aplicaciones avanzadas. Para facilitar el aprendizaje de las competencias de ambas asignaturas, el profesorado nos hemos organizado para proponerte un proyecto común que viene detallado en un documento separado colgado en el Aula Virtual de las dos asignaturas. Las clases de laboratorio (LA) de la EI1039 son de trabajo (en grupo) para la consecución del proyecto común.\r\nMateriales y contenido\r\nLos materiales del curso están disponibles tanto en el Aula Virtual como en este sitio web. Te recominedo que siempre tengas a mano el syllabus con la planifiación temporal de las actividades a lo largo de curso.\r\nLas actividades propuestas para trabajo no presencial se entregan a través de las tareas correspondientes en el Aula Virtual de la asignatura. Voy a utilizar el Aula Virtual para proporcionarte feedback sobre las actividades propuestas, para anuncios de la asignatura y, en definitiva, para cualquier tipo de comunicación oficial. Agradecería enormemente que todas las comunicaciones entre nosotros relativas a la asignatura fueran canalizadas a través del Aula Virtual, y no a través de mi correo personal.\r\nMétodos de evaluación\r\nLa participación en clase es fundamental. Las actividades propuestas en aula invitan al trabajo colaborativo y participativo, fomentado el aprendizaje activo, la discusión y la comuniación. Las actividades presenciales incluyen una componente evaluable a discreción del instructor (5%). Estas actividades presenciales se complementan con actividades no presenciales individuales (homework) para entregar en el Aula Virtual, las cuales contribuye un 15% de la nota. En total, el trabajo presencial y no presencial relacionado con las clases de teoría computa un 20% de la nota de la asignatura.\r\nLos seminarios computan otro 20% de la nota final. A lo largo del curso se informará con más detalle de la naturaleza de los dos seminarios evaluables. En esencia, son presentaciones grupales sobre un tema explorado por cada grupo.\r\nEl desarrollo, entrega y defensa del proyecto común cubre el 60% de la nota.\r\nInstrumentos de evaluación\r\nActividad\r\n\r\nPeso\r\nTipo\r\nInstrumento\r\nTrabajo presencial en aula (POGIL)\r\nGrupo\r\n5%\r\nFormativa / Formadora\r\nObservación, participación, trabajo en equipo, roles\r\nTrabajo no presencial (HW)\r\nIndividual\r\n15%\r\nFormativa / Formadora\r\nCódigo y/o reflexión personal\r\nSeminario Arquitectura software (con EI1048)\r\nGrupo\r\n10%\r\nFormativa\r\nPresentación y discusión\r\nSeminario Interfaces Usuario\r\nGrupo\r\n10%\r\nFormativa\r\nPresentación y discusión\r\nProyecto común (con EI1048)\r\nGrupo\r\n60%\r\nAcreditativa\r\nCódigo, documento escrito, presentación y discusión\r\n\r\nPolítica de entrega tardía/retrasada: Las fechas límite semanales (miércoles noche para el trabajo no presencial, por ejemplo) tienen sentido para que pueda evaluar el trabajo y proporcionar feedback rápido en la siguiente clase de teoría (viernes). Por lo tanto, las actividades entregadas con retraso no se aceptarán sin permiso especial o debida justificación. Estoy dispuesto a ser flexible ante circunstancias especiales (por ejemplo, si tu o miembros de tu familia son hospitalizados).\r\n\r\nCódigo de Conducta\r\nTo ensure a welcoming environment for all, we require everyone participating in the course to conform to the Code of Conduct given below. This code applies to all spaces related to the course including, but not limited to, classroom, seminars, Aula Virtual, emails, shared documents, and code repositories. You can report Code of Conduct violations to Carlos Granell either in person or by e-mail.\r\nWe are dedicated to providing a welcoming and supportive environment for all people, regardless of background or identity. However, we recognize that some groups in our community are subject to historical and ongoing discrimination, and may be vulnerable or disadvantaged. Membership in such a specific group can be on the basis of characteristics such as gender, sexual orientation, disability, physical appearance, body size, race, nationality, sex, color, ethnic or social origin, pregnancy, citizenship, familial status, veteran status, genetic information, religion or belief, political or any other opinion, membership of a national minority, property, birth, age, or choice of text editor. We do not tolerate harassment of participants on the basis of these categories, or for any other reason.\r\nHarassment is any form of behavior intended to exclude, intimidate, or cause discomfort. Because we are a diverse community, we may have different ways of communicating and of understanding the intent behind actions. Therefore we have chosen to prohibit certain forms of behavior in our community, regardless of intent.\r\nProhibited harassing behavior includes but is not limited to:\r\nwritten or verbal comments which have the effect of excluding people on the basis of membership of a specific group listed above;\r\ncausing someone to fear for their safety, such as through stalking, following, or intimidation;\r\nthe display of sexual or violent images;\r\nunwelcome sexual attention;\r\nnon-consensual or unwelcome physical contact;\r\nsustained disruption of talks, events or communications;\r\nincitement to violence, suicide, or self-harm;\r\ncontinuing to initiate interaction (including photography or recording) with someone after being asked to stop; and\r\npublication of private communication without consent.\r\nBehavior not explicitly mentioned above may still constitute harassment. The list above should not be taken as exhaustive but rather as a guide to make it easier to enrich all of us and the communities in which we participate. All interactions should be professional regardless of location: harassment is prohibited whether it occurs on-line or off-line, and the same standards apply to both.\r\nEnforcement of the Code of Conduct will be respectful and not include any harassing behaviors.\r\nThank you for helping make this a welcoming, friendly community for all.\r\nThis code of conduct is a simplification of the CoC for [Reproducible Research workshops at AGILE](%5Bhttps://o2r.info/reproducible-agile/),,) which in turn is based on a CoC for Teaching Tech Together](http://teachtogether.tech/)) by Greg Wilson.]\r\n\r\n\r\n\r\nLang, James M. 2016. Small Teaching. Jossey-Bass. https://www.jamesmlang.com/books.\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:05:05+02:00"
    },
    {
      "path": "references.html",
      "title": "Referencias",
      "description": "Bibliografía con todas las referencias, tanto si se han incluído como no en los materiales de la asignatura.  \n",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\nBass, Len, Paul Clements, and Rick Kazman. 2021. Software Architecture in Practice. Addison-Wesley Professional; 4th Edition.\r\n\r\n\r\nFowler, Martin. 2003. “Who Needs an Architect?” IEEE Software 20 (5): 2–4. https://doi.org/10.1109/MS.2003.1231144.\r\n\r\n\r\nFreeman, Eric, Elisabeth Robson, Bert Bates, and Kathy Sierra. 2004. Head First Design Patterns, 1st Edition. O’Really Media Inc.\r\n\r\n\r\nGamma, Erich, Richard Helm, Ralph Johnson, and John Vlissides. 1994. Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley.\r\n\r\n\r\nGonzález-Pérez, Alberto, and Miguel Matey-Sanz. 2021. “nativescript-task-dispatcher: A Reactive Android-Based Task Scheduler and Dispatcher.” Zenodo. https://doi.org/10.5281/zenodo.4530103.\r\n\r\n\r\nLang, James M. 2016. Small Teaching. Jossey-Bass. https://www.jamesmlang.com/books.\r\n\r\n\r\nMartin, Robert. 2002. Agile Software Development: Principles, Patterns, and Practices. Pearson Education, 1st edition. http://blog.cleancoder.com/uncle-bob/2020/10/18/Solid-Relevance.html.\r\n\r\n\r\n———. 2018. Clean Architecture: A Craftsman’s Guide to Software Structure and Design. Pearson Education, 1st edition. https://www.pearson.com/us/higher-education/program/Martin-Clean-Architecture-A-Craftsman-s-Guide-to-Software-Structure-and-Design/PGM333762.html.\r\n\r\n\r\nRichards, Mark, and Neal Ford. 2020. Fundamentals of Software Architecture, 1st Edition. O’Really Media Inc.\r\n\r\n\r\nRodríguez Pupo, Luis Enrique. 2021. “An Analytics Platform for Integrating and Computing Spatio-Temporal Metrics in Location-Aware Games.” PhD thesis, Universitat Jaume I. Escola de Doctorat. https://doi.org/10.6035/14101.2021.357562.\r\n\r\n\r\nShvets, Alexander. 2019. Sumérgete En Los Patrones de Diseño. Refactoring.Guru. https://refactoring.guru/design-patterns/book.\r\n\r\n\r\nWilson, Greg. 2019. Teaching Tech Together: How to Make Lessons That Work and Build a Teaching Community Around It. Taylor & Francis. https://teachtogether.tech/.\r\n\r\n\r\nXie, Y. 2019. Bookdown: Authoring Books and Technical Documents with R Markdown. CRC Press. https://bookdown.org/yihui/bookdown/.\r\n\r\n\r\nXie, Y, JJ Allaire, and G Grolemund. 2018. R Markdown: The Definitive Guide. CRC Press. https://bookdown.org/yihui/rmarkdown/.\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:05:07+02:00"
    },
    {
      "path": "syllabus.html",
      "title": "Syllabus",
      "description": "Esta programación temporal puede estar sujeta a cambios durante el curso.",
      "author": [],
      "contents": "\r\n\r\nSemana\r\nFecha\r\nPre (lecturas/videos)\r\nTE (viernes, 15:00-17:00)\r\nPost (homework)\r\nLA/SE (viernes, 17:00-19:00)\r\n1\r\n10-sep\r\nemail\r\nTE1 Intro asignatura y arquitectura software\r\nHomework 1 (hasta 22-sep, 23:59)\r\nNA\r\n2\r\n17-sep\r\n\r\nNA\r\n\r\nNA\r\n3\r\n24-sep\r\nVideo: What’s is POGIL? & web site IntroCS-POGIL\r\nBlog: Master Plan for becoming a Software Architect (PDF en AV)\r\nTE2 Estilos architectura software\r\nHomework 2 (hasta 29-sep, 23:59)\r\nNA\r\n4\r\n01-oct\r\nRefresca los conceptos clave de Programación Orientada a Objetos.\r\nVideo: Singleton Pattern by Okhravi (20min)\r\nTE3 Patrones creacionales. Singleton y Factory\r\nHomework 3 (hasta 6-oct, 23:59)\r\nLA1. Intro entrega #1 proyecto\r\n5\r\n08-oct\r\n\r\nTE4 Patrones estructurales\r\n\r\nLA2\r\n6\r\n15-oct\r\n\r\nTE5 Patrones estructurales\r\nHomework 4 (hasta 20-oct, 23:59)\r\nLA3. Intro entrega #2 proyecto + fecha límite entrega #1\r\n7\r\n22-oct\r\n\r\nTE6 Patrones comportamiento\r\nHomework 5 (hasta 27-oct, 23:59)\r\nSE1. Arquitectura Software\r\n8\r\n29-oct\r\n\r\nTE7 Patrones comportamiento\r\nHomework 6 (hasta 3-nov, 23:59)\r\nLA4\r\n9\r\n05-nov\r\n\r\nTE8 Patrones o Intefaces Usuario o patrones\r\n\r\nLA5\r\n10\r\n12-nov\r\n\r\nNA\r\n\r\nLA6. Intro entrega #3 + fecha límite entrega #2\r\n11\r\n19-nov\r\n\r\nNA\r\n\r\nSE2 Interfaces Usuario\r\n12\r\n26-nov\r\n\r\nNA\r\n\r\nLA7\r\n13\r\n03-dic\r\n\r\nNA\r\n\r\nLA8\r\n14\r\n10-dic\r\n\r\nNA\r\n\r\nSE3 Interfaces Usuario\r\n15\r\n17-dic\r\n\r\nNA\r\n\r\nSE4 Ensayo presentación proyecto\r\n\r\n23-dic , 23:39\r\n\r\n\r\n\r\nFecha límite entrega #3\r\n\r\nene 2022\r\n\r\n\r\n\r\nPresentación proyecto\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:05:09+02:00"
    },
    {
      "path": "TE1.html",
      "title": "TE1",
      "description": "Introducción de la asignatura y logística <br/> Fundamentos de arquitectura: características y compromisos.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nOrganización clase\r\n\r\nOrganización clase\r\n[40 min] Opening: Bienvenidos a la EI1039 (y EI1048)!\r\n[20 min] Presentación: Proyecto común de EI1039/EI1048\r\n[25 min] Presentación: Fundamentos de arquitectura: conceptos y roles\r\nDefinición de arquitectura de software\r\nTareas de un arquitecto de software\r\nArquitecto vs diseñador/desarrollador\r\n\r\n[25 min] Presentación: Fundamentos de arquitectura: características\r\nDefinición de características de arquitectura; dimensiones (operacionales, estructurales, horizontales)\r\nIdentificación de las características relevantes para un sistema\r\nTodo en arquitectura de software tiene compromisos\r\n\r\n[10 min] Closing: Intro HW1\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:05:11+02:00"
    },
    {
      "path": "TE2.html",
      "title": "TE2",
      "description": "Fundamentos de arquitectura: características <br/>Fundamentos de arquitectura: estilos.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nOrganización clase\r\n\r\n\r\nOrganización clase\r\n[05 min] Opening\r\n[10 min] Revisión: HW1\r\n[10 min] Revisión: Dudas del proyecto común de EI1039/EI1048\r\n[20 min] Actividad POGIL: Buenas prácticas para el aprendizaje\r\nPOGIL en EI1039 (más interacción y participación, mejor aprendizaje)\r\nEquipos de 3-4 personas\r\nAsignación de roles. Todos se bajan una copia de las Role Cards (AV)\r\nActividad POGIL (AV)\r\n\r\n[30 min] Actividad POGIL: Arquitectura kata\r\nMismo equipo que anterior actividad\r\nAsignación de roles (rotan)\r\nActividad POGIL (AV)\r\n\r\n[25 min] Presentación: Estilos de arquitectura\r\n[10 min] Closing. Intro HW2\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:05:13+02:00"
    },
    {
      "path": "TE3.html",
      "title": "TE3 Patrones creacionales",
      "description": "Introducción a los patrones de diseño <br/> Patrones creacionales: Singleton y Factory.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nOrganización clase\r\n\r\n\r\nOrganización clase\r\n[05 min] Opening\r\n[30 min] Presentación: Introducción a los Patrones de Diseño\r\n[45 min] Actividad POGIL: Singleton pattern\r\nEquipos de 4-5 personas\r\nAsignación de roles, incluyendo Programador. Todos se bajan una copia de las Role Cards (AV)\r\nActividad POGIL (AV)\r\n\r\n[30] Presentación: Factory objects y Factory pattern\r\nMismos equipos y roles que en actividad anterior\r\nPreguntas para discutir en equipos\r\n\r\n[10 min] Closing: Intro HW3\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-26T01:05:14+02:00"
    }
  ],
  "collections": []
}
